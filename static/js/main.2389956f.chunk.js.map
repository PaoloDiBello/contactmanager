{"version":3,"sources":["context.js","components/contacts/Contact.js","components/contacts/Contacts.js","components/layout/TextInputGroup.js","components/contacts/AddContact.js","components/contacts/EditContact.js","components/layout/Header.js","components/pages/About.js","components/pages/NotFound.js","components/test/Test.js","App.js","serviceWorker.js","index.js"],"names":["Context","React","createContext","reducer","state","action","type","Object","objectSpread","contacts","filter","contact","id","payload","concat","toConsumableArray","map","Provider","_Component","_getPrototypeOf2","_this","classCallCheck","this","_len","arguments","length","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","apply","dispatch","setState","inherits","createClass","key","value","_componentDidMount","asyncToGenerator","regenerator_default","a","mark","_callee","res","wrap","_context","prev","next","axios","get","sent","data","stop","react_default","createElement","props","children","Component","Consumer","Contact","showContactInfo","onShowClick","onDeleteClick","delete","t0","_this2","_this$props$contact","name","email","phone","className","style","cursor","onClick","float","color","bind","react_router_dom","to","marginRight","Contacts","Fragment","contacts_Contact","TextInputGroup","_ref","label","placeholder","onChange","error","htmlFor","classnames","is-invalid","defaultProps","AddContact","errors","e","defineProperty","target","onSubmit","_this$state","newContact","preventDefault","abrupt","uuid","post","history","push","_this$state2","layout_TextInputGroup","EditContact","upContact","_ref2","match","params","put","Header","branding","href","About","NotFound","Test","test","title","body","console","log","fetch","then","response","json","nextProps","nextState","prevProps","App","context_Provider","layout_Header","react_router","exact","path","component","Boolean","window","location","hostname","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.2389956f.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport axios from 'axios'\r\nconst Context = React.createContext();\r\n\r\nconst reducer = (state, action) => {\r\n    switch (action.type) {\r\n        case 'DELETE_CONTACT':\r\n            return {\r\n                ...state,\r\n                contacts: state.contacts.filter(\r\n                    contact => contact.id !== action.payload\r\n                )\r\n            };\r\n        case 'ADD_CONTACT':\r\n            return {\r\n                ...state,\r\n                contacts: [action.payload, ...state.contacts]\r\n            };\r\n        case 'UPDATE_CONTACT':\r\n            return {\r\n                ...state,\r\n                contacts: state.contacts.map(contact =>\r\n                    contact.id === action.payload.id ?\r\n                        (contact = action.payload) : contact)\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport class Provider extends Component {\r\n    state = {\r\n        contacts: [\r\n        ],\r\n        dispatch: action => { this.setState(state => reducer(state, action)) }\r\n    };\r\n\r\n    async componentDidMount() {\r\n        const res = await axios.get('https://jsonplaceholder.typicode.com/users')\r\n        this.setState({ contacts: res.data })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Context.Provider value={this.state}>\r\n                {this.props.children}\r\n            </Context.Provider>\r\n        );\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\nexport const Consumer = Context.Consumer;","import React, { Component } from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { Consumer } from '../../context'\r\nimport axios from 'axios'\r\nimport { Link } from 'react-router-dom'\r\nclass Contact extends Component {\r\n    state = {\r\n        showContactInfo: false\r\n    };\r\n\r\n    onShowClick = () => {\r\n        this.setState({ showContactInfo: !this.state.showContactInfo })\r\n    }\r\n\r\n    onDeleteClick = async (id, dispatch) => {\r\n        try {\r\n            await axios.delete('https://jsonplaceholder.typicode.com/users/' + id)\r\n            dispatch({ type: 'DELETE_CONTACT', payload: id })\r\n        } catch{\r\n            dispatch({ type: 'DELETE_CONTACT', payload: id })\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const { id, name, email, phone } = this.props.contact;\r\n        const { showContactInfo } = this.state;\r\n\r\n        return (\r\n            <Consumer>\r\n                {value => {\r\n                    const { dispatch } = value;\r\n                    return (\r\n                        <div className=\"card card-body mb-3\">\r\n                            <h4>{name}{' '}\r\n                                <i style={{ cursor: 'pointer' }} className=\"fas fa-sort-down\" onClick={this.onShowClick}></i>\r\n                                <i className=\"fas fa-times\" style={{ cursor: 'pointer', float: 'right', color: 'red' }} onClick={this.onDeleteClick.bind(this, id, dispatch)}></i>\r\n                                <Link to={`contact/edit/${id}`}>\r\n                                    <i\r\n                                        className=\"fas fa-pencil-alt\"\r\n                                        style={{\r\n                                            cursor: 'pointer',\r\n                                            float: 'right',\r\n                                            color: 'black',\r\n                                            marginRight: '1rem'\r\n                                        }}\r\n                                    ></i>\r\n\r\n                                </Link>\r\n                            </h4>\r\n                            {showContactInfo ?\r\n                                (<ul className=\"list-group\">\r\n                                    <li className=\"list-group-item\">email: {email}</li>\r\n                                    <li className=\"list-group-item\" >phone: {phone}</li>\r\n                                </ul>\r\n                                ) : null\r\n\r\n                            }\r\n                        </div>\r\n                    )\r\n                }}\r\n            </Consumer>\r\n\r\n        )\r\n    }\r\n}\r\n\r\n\r\nContact.propTypes = {\r\n    contact: PropTypes.object.isRequired,\r\n}\r\n\r\nexport default Contact;","import React, { Component } from \"react\";\r\nimport Contact from \"./Contact\";\r\n\r\nimport { Consumer } from \"../../context\";\r\n\r\nclass Contacts extends Component {\r\n    render() {\r\n        return (\r\n            <Consumer>\r\n                {value => {\r\n                    const { contacts } = value;\r\n                    return (\r\n                        <React.Fragment>\r\n                            <h1 className=\"display-4 mb-2\">\r\n                                <span className=\"text-danger\">Contact</span> List\r\n              </h1>\r\n                            {contacts.map(contact => (\r\n                                <Contact key={contact.id} contact={contact} />\r\n                            ))}\r\n                        </React.Fragment>\r\n                    );\r\n                }}\r\n            </Consumer>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Contacts;","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport classnames from 'classnames'\r\nconst TextInputGroup = ({\r\n    label,\r\n    name,\r\n    value,\r\n    placeholder,\r\n    type,\r\n    onChange,\r\n    error\r\n}) => {\r\n    return (\r\n        <div>\r\n            <div className=\"form-group\">\r\n                <label htmlFor={name}>{label}</label>\r\n                <input type={type} name={name} value={value}\r\n                    className={classnames(\"form-control form-control-lg\",\r\n                        { 'is-invalid': error }\r\n                    )}\r\n                    placeholder={placeholder} onChange={onChange} />\r\n                {error && <div className=\"invalid-feedback\">{error}</div>}\r\n            </div>\r\n        </div >\r\n    )\r\n}\r\n\r\nTextInputGroup.propTypes = {\r\n    name: PropTypes.string.isRequired,\r\n    placeholder: PropTypes.string.isRequired,\r\n    value: PropTypes.string.isRequired,\r\n    type: PropTypes.number.isRequired,\r\n    onChange: PropTypes.func.isRequired,\r\n    label: PropTypes.string.isRequired,\r\n    error: PropTypes.string\r\n}\r\n\r\nTextInputGroup.defaultProps = {\r\n    type: 'text'\r\n}\r\n\r\nexport default TextInputGroup;","import React, { Component } from 'react'\r\nimport { Consumer } from '../../context'\r\nimport TextInputGroup from '../layout/TextInputGroup'\r\nimport uuid from 'uuid'\r\nimport axios from 'axios'\r\n\r\nclass AddContact extends Component {\r\n    state = {\r\n        name: '',\r\n        email: '',\r\n        phone: '',\r\n        errors: {}\r\n    }\r\n\r\n    onChange = (e) => this.setState({ [e.target.name]: e.target.value });\r\n\r\n    onSubmit = async (dispatch, e) => {\r\n        e.preventDefault();\r\n        const { name, email, phone } = this.state;\r\n\r\n        if (name === '') {\r\n            this.setState({\r\n                errors:\r\n                    { name: 'Name is required' }\r\n            })\r\n            return;\r\n        }\r\n\r\n\r\n        if (email === '') {\r\n            this.setState({\r\n                errors:\r\n                    { email: 'Email is required' }\r\n            })\r\n            return;\r\n        }\r\n\r\n        const newContact = {\r\n            id: uuid(),\r\n            name,\r\n            email,\r\n            phone\r\n        }\r\n\r\n        const res = axios.post('https://jsonplaceholder.typicode.com/users/', newContact)\r\n        dispatch({ type: 'ADD_CONTACT', payload: res.data })\r\n        //dispatch({ type: 'ADD_CONTACT', payload: newContact })\r\n\r\n        this.setState({\r\n            name: '',\r\n            email: '',\r\n            phone: '',\r\n            errors: {}\r\n        })\r\n\r\n\r\n\r\n        this.props.history.push('/');\r\n    }\r\n\r\n    render() {\r\n        const { name, email, phone, errors } = this.state;\r\n\r\n        return (\r\n            <Consumer>\r\n                {value => {\r\n                    const { dispatch } = value;\r\n                    return (\r\n                        <div className=\"card mb-3\">\r\n\r\n                            <div className=\"card-header\">\r\n                                Add Contact\r\n                        </div>\r\n                            <div className=\"card-body\">\r\n                                <form action=\"\" onSubmit={this.onSubmit.bind(this, dispatch)}>\r\n                                    <TextInputGroup\r\n                                        label=\"Name\"\r\n                                        name=\"name\"\r\n                                        placeholder=\"Enter name..\"\r\n                                        value={name}\r\n                                        onChange={this.onChange}\r\n                                        error={errors.name}\r\n                                    />\r\n\r\n                                    <TextInputGroup\r\n                                        label=\"Email\"\r\n                                        name=\"email\"\r\n                                        placeholder=\"Enter email..\"\r\n                                        value={email}\r\n                                        onChange={this.onChange}\r\n                                        type=\"email\"\r\n                                        error={errors.email}\r\n                                    />\r\n\r\n                                    <TextInputGroup\r\n                                        label=\"Phone\"\r\n                                        name=\"phone\"\r\n                                        placeholder=\"Enter phone..\"\r\n                                        value={phone}\r\n                                        onChange={this.onChange}\r\n                                    />\r\n\r\n                                    <input type=\"submit\" value=\"Add Contact\" className=\"btn btn-block btn-light\" />\r\n                                </form>\r\n\r\n                            </div>\r\n                        </div>\r\n                    )\r\n                }}\r\n            </Consumer>\r\n        )\r\n\r\n    }\r\n}\r\n\r\nexport default AddContact;\r\n","import React, { Component } from 'react'\r\nimport { Consumer } from '../../context'\r\nimport TextInputGroup from '../layout/TextInputGroup'\r\nimport uuid from 'uuid'\r\nimport axios from 'axios'\r\n\r\nclass EditContact extends Component {\r\n    state = {\r\n        name: '',\r\n        email: '',\r\n        phone: '',\r\n        errors: {}\r\n    }\r\n\r\n    async componentDidMount() {\r\n        const { id } = this.props.match.params;\r\n        const res = await axios.get(`https://jsonplaceholder.typicode.com/users/${id}`)\r\n        const contact = res.data;\r\n        this.setState({\r\n            name: contact.name,\r\n            email: contact.email,\r\n            phone: contact.phone\r\n        });\r\n    }\r\n\r\n    onChange = (e) => this.setState({ [e.target.name]: e.target.value });\r\n\r\n    onSubmit = async (dispatch, e) => {\r\n        e.preventDefault();\r\n        const { name, email, phone } = this.state;\r\n\r\n        if (name === '') {\r\n            this.setState({\r\n                errors:\r\n                    { name: 'Name is required' }\r\n            })\r\n            return;\r\n        }\r\n\r\n\r\n        if (email === '') {\r\n            this.setState({\r\n                errors:\r\n                    { email: 'Email is required' }\r\n            })\r\n            return;\r\n        }\r\n\r\n        const upContact = {\r\n            name,\r\n            email,\r\n            phone\r\n        }\r\n\r\n        const { id } = await this.props.match.params;\r\n        const res = await axios.put(`https://jsonplaceholder.typicode.com/users/${id}`, upContact);\r\n\r\n        dispatch({ type: 'UPDATE_CONTACT', payload: res.data })\r\n\r\n\r\n        this.setState({\r\n            name: '',\r\n            email: '',\r\n            phone: '',\r\n            errors: {}\r\n        })\r\n\r\n\r\n\r\n        this.props.history.push('/');\r\n    }\r\n\r\n    render() {\r\n        const { name, email, phone, errors } = this.state;\r\n\r\n        return (\r\n            <Consumer>\r\n                {value => {\r\n                    const { dispatch } = value;\r\n                    return (\r\n                        <div className=\"card mb-3\">\r\n\r\n                            <div className=\"card-header\">\r\n                                Add Contact\r\n                        </div>\r\n                            <div className=\"card-body\">\r\n                                <form action=\"\" onSubmit={this.onSubmit.bind(this, dispatch)}>\r\n                                    <TextInputGroup\r\n                                        label=\"Name\"\r\n                                        name=\"name\"\r\n                                        placeholder=\"Enter name..\"\r\n                                        value={name}\r\n                                        onChange={this.onChange}\r\n                                        error={errors.name}\r\n                                    />\r\n\r\n                                    <TextInputGroup\r\n                                        label=\"Email\"\r\n                                        name=\"email\"\r\n                                        placeholder=\"Enter email..\"\r\n                                        value={email}\r\n                                        onChange={this.onChange}\r\n                                        type=\"email\"\r\n                                        error={errors.email}\r\n                                    />\r\n\r\n                                    <TextInputGroup\r\n                                        label=\"Phone\"\r\n                                        name=\"phone\"\r\n                                        placeholder=\"Enter phone..\"\r\n                                        value={phone}\r\n                                        onChange={this.onChange}\r\n                                    />\r\n\r\n                                    <input type=\"submit\" value=\"Update Contact\" className=\"btn btn-block btn-light\" />\r\n                                </form>\r\n\r\n                            </div>\r\n                        </div>\r\n                    )\r\n                }}\r\n            </Consumer>\r\n        )\r\n\r\n    }\r\n}\r\n\r\nexport default EditContact;\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { Link } from 'react-router-dom'\r\nconst Header = (props) => {\r\n    const { branding } = props;\r\n    return (<div>\r\n        <nav className=\"navbar navbar-expand-sm navbar-dark bg-danger mb-3 py--0\">\r\n            <div className=\"container\">\r\n                <a href=\"/\" className=\"navbar-brand\">\r\n                    {branding}\r\n                </a>\r\n            </div>\r\n            <ul className=\"navbar-nav mr-auto\">\r\n                <li className=\"nav-item\">\r\n                    <Link to=\"/\" className=\"nav-link\">\r\n                        <i className=\"fas fa-home\"></i> Home\r\n                    </Link>\r\n                </li>\r\n                <li className=\"nav-item\">\r\n                    <Link to=\"/contact/add\" className=\"nav-link\">\r\n                        <i className=\"fas fa-plus\"></i> Add Contact\r\n                    </Link>\r\n                </li>\r\n\r\n                <li className=\"nav-item\">\r\n                    <Link to=\"/about\" className=\"nav-link\">\r\n                        <i className=\"fas fa-question\"></i> About\r\n                    </Link>\r\n                </li>\r\n            </ul>\r\n\r\n        </nav>\r\n\r\n\r\n    </div>\r\n    )\r\n}\r\n\r\nHeader.defaultProps = {\r\n    branding: 'My App'\r\n}\r\n\r\nHeader.propTypes = {\r\n    branding: PropTypes.string.isRequired\r\n}\r\n\r\nexport default Header;","import React from 'react'\r\n\r\nexport default function About(props) {\r\n    return (\r\n        <div>\r\n            <h1 className=\"display-4\">About contact manager</h1>\r\n            <p className=\"lead\">Simple app to manage contacts</p>\r\n            <p className=\"text-secondary\">Version 1.0.0</p>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nexport default function NotFound() {\r\n    return (\r\n        <div>\r\n            <h1 className=\"display-4\"> <span className=\"text-danger\">404</span> Page Not Found</h1>\r\n            <p className=\"lead\">Sorry, that page doesn't exist</p>\r\n        </div>\r\n    )\r\n}\r\n","import React, { Component } from 'react'\r\n\r\nclass Test extends Component {\r\n    state = {\r\n        test: 'test',\r\n        title: '',\r\n        body: '',\r\n    }\r\n\r\n\r\n    componentDidMount() {\r\n        console.log('Component did mount..');\r\n        fetch('https://jsonplaceholder.typicode.com/posts/1')\r\n            .then(response => response.json())\r\n            .then(data => this.setState({\r\n                title: data.title,\r\n                body: data.body\r\n            }))\r\n\r\n\r\n\r\n    }\r\n\r\n    componentWillMount() {\r\n        console.log('Component will mount..');\r\n    }\r\n    componentDidUpdate() {\r\n        console.log('Component did update..');\r\n    }\r\n    componentWillUpdate() {\r\n        console.log('Component will update..');\r\n    }\r\n\r\n    componentWillReceiveProps(nextProps, nextState) {\r\n        console.log('Component will receive props..');\r\n    }\r\n\r\n    static getDerivedStateFromProps(nextProps,\r\n        prevProps) {\r\n        return {\r\n            test: 'sth'\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const { title, body } = this.state;\r\n        return (\r\n            <div>\r\n                <h1>{title}</h1>\r\n                <p>{body}</p>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default Test;","import React, { Component } from 'react';\nimport './App.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport Contacts from './components/contacts/Contacts';\nimport AddContact from './components/contacts/AddContact';\nimport EditContact from './components/contacts/EditContact';\nimport { Provider } from './context';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom'\nimport Header from './components/layout/Header';\nimport About from './components/pages/About';\nimport NotFound from './components/pages/NotFound';\nimport Test from './components/test/Test'\n\n\nclass App extends Component {\n  render() {\n    return (\n      <Provider>\n        <Router>\n          <div className=\"App\">\n            <Header branding=\"Contact Manager\" />\n            <div className=\"container\">\n              <Switch>\n                <Route exact path=\"/\" component={Contacts} />\n                <Route exact path=\"/contact/add\" component={AddContact} />\n                <Route exact path=\"/about\" component={About} />\n                <Route exact path=\"/contact/edit/:id\" component={EditContact} />\n                <Route exact path=\"/test\" component={Test} />\n                <Route component={NotFound} />\n              </Switch>\n            </div>\n          </div >\n        </Router>\n      </Provider>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}